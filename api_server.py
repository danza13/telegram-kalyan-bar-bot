import os
import logging
from fastapi import FastAPI, HTTPException
from pydantic import BaseModel
from dotenv import load_dotenv
from telegram import Bot
from telegram.error import TelegramError
from fastapi.middleware.cors import CORSMiddleware

# –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∑–º—ñ–Ω–Ω–∏—Ö —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞
load_dotenv()

BOT_TOKEN = os.getenv("BOT_TOKEN")
GROUP_CHAT_ID = os.getenv("GROUP_CHAT_ID")

if BOT_TOKEN is None:
    raise ValueError("BOT_TOKEN –Ω–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–π —É .env")
if GROUP_CHAT_ID is None:
    raise ValueError("GROUP_CHAT_ID –Ω–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–π —É .env")

try:
    GROUP_CHAT_ID = int(GROUP_CHAT_ID)
except ValueError:
    raise ValueError("GROUP_CHAT_ID –ø–æ–≤–∏–Ω–µ–Ω –±—É—Ç–∏ —á–∏—Å–ª–æ–º.")

# –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è Telegram –ë–æ—Ç–∞
bot = Bot(token=BOT_TOKEN)

# –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è FastAPI –¥–æ–¥–∞—Ç–∫—É
app = FastAPI()

# –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è CORS (–ø–µ—Ä–µ–∫–æ–Ω–∞–π—Ç–µ—Å—è, —â–æ allow_origins –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—î –≤–∞—à–æ–º—É WebApp URL)
app.add_middleware(
    CORSMiddleware,
    allow_origins=["https://danza13.github.io/"],
    allow_credentials=True,
    allow_methods=["*"],
    allow_headers=["*"],
)

# –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –ª–æ–≥—É–≤–∞–Ω–Ω—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

# –ú–æ–¥–µ–ª—å –¥–∞–Ω–∏—Ö –±—Ä–æ–Ω—é–≤–∞–Ω–Ω—è
class Booking(BaseModel):
    establishment: str
    datetime: str
    guests: int
    name: str
    phone: str

@app.post("/booking")
async def create_booking(booking: Booking):
    logger.info(f"–û—Ç—Ä–∏–º–∞–Ω–æ –±—Ä–æ–Ω—é–≤–∞–Ω–Ω—è: {booking}")
    
    booking_info = (
        "üìÖ *–ë—Ä–æ–Ω—é–≤–∞–Ω–Ω—è*\n"
        f"üè† *–ó–∞–∫–ª–∞–¥:* {booking.establishment}\n"
        f"üïí *–ß–∞—Å —Ç–∞ –¥–∞—Ç–∞:* {booking.datetime}\n"
        f"üë• *–ö—ñ–ª—å–∫—ñ—Å—Ç—å –≥–æ—Å—Ç–µ–π:* {booking.guests}\n"
        f"üìù *–ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞ –æ—Å–æ–±–∞:* {booking.name}\n"
        f"üìû *–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É:* {booking.phone}"
    )
    
    try:
        await bot.send_message(
            chat_id=GROUP_CHAT_ID,
            text=booking_info,
            parse_mode='Markdown'
        )
        logger.info("–ë—Ä–æ–Ω—é–≤–∞–Ω–Ω—è —É—Å–ø—ñ—à–Ω–æ –Ω–∞–¥—ñ—Å–ª–∞–Ω–æ –¥–æ Telegram –≥—Ä—É–ø–∏.")
        return {"status": "success", "message": "–ë—Ä–æ–Ω—é–≤–∞–Ω–Ω—è –æ—Ç—Ä–∏–º–∞–Ω–æ."}
    except TelegramError as e:
        logger.error(f"–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤—ñ–¥–ø—Ä–∞–≤—Ü—ñ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –¥–æ Telegram: {e}")
        raise HTTPException(status_code=500, detail="–ù–µ –≤–¥–∞–ª–æ—Å—è –≤—ñ–¥–ø—Ä–∞–≤–∏—Ç–∏ –±—Ä–æ–Ω—é–≤–∞–Ω–Ω—è –¥–æ Telegram.")

# –ö–æ—Ä–µ–Ω–µ–≤–∏–π –º–∞—Ä—à—Ä—É—Ç
@app.get("/")
def read_root():
    return {"message": "API –¥–ª—è –±—Ä–æ–Ω—é–≤–∞–Ω–Ω—è Telegram –ø—Ä–∞—Ü—é—î."}
